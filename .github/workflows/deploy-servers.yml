name: Deploy-Servers
on:
  push:
    paths-ignore:
    - '**/*.md'
  pull_request:
    paths-ignore:
    - '**/*.md'
jobs:
  
  review:
    name: Review ChangeSet
    if: contains( github.base_ref, 'develop') || contains( github.base_ref, 'main')
    runs-on: ubuntu-latest
    outputs:
      env-name: ${{ steps.env-name.outputs.environment }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      id: creds
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.CFM_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.CFM_AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Configure environment name
      id: env-name
      env:
        REPO: ${{ github.repository }}
      run: |
        ENVIRONMENT=`echo $REPO | tr "/" "-"`
        echo "Environment name: $ENVIRONMENT"
        echo "::set-output name=environment::$ENVIRONMENT"
    - name: cloudformation changeset review
      id: service-review
      uses: aws-actions/aws-cloudformation-github-deploy@v1
      with:
        name: "deploy-servers-test"
        template: ./servers/servers.yaml
        no-fail-on-empty-changeset: "1"
        no-execute-changeset: "1"
        parameter-overrides: >-
          EnvironmentName=poc-test,
          ServersMinSize=2,
          ServersMaxSize=5,
          ServersDesiredCpacity=3,
          S3PatchToBucket=s3://s3-hawebapp-cris-test,
          KeyPairBastion=BastionKey,
          KeyPairPrivate=BastionKey,
          DNSProtocol=http://,
          NetworkAccessIP=0.0.0.0/0
  deploy_servers:
    name: Deploy servers-stack
    if: contains( github.ref, 'develop') || contains( github.ref, 'main')
    #needs: [html-publish, artifactory_deployment]
    runs-on: ubuntu-latest
    outputs:
      env-name: ${{ steps.env-name.outputs.environment }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      id: creds
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.CFM_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.CFM_AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Configure environment name
      id: env-name
      env:
        REPO: ${{ github.repository }}
      run: |
        ENVIRONMENT=`echo $REPO | tr "/" "-"`
        echo "Environment name: $ENVIRONMENT"
        echo "::set-output name=environment::$ENVIRONMENT"
        sleep $[ ( $RANDOM % 10 )  + 1 ]s
    
    - name: Service servers
      id: service-servers
      uses: aws-actions/aws-cloudformation-github-deploy@v1
      with:
        name: "service-servers-deploy"
        template: ./servers/servers.yaml
        no-fail-on-empty-changeset: "1"
        parameter-overrides: >-
          EnvironmentName=poc-test,
          ServersMinSize=2,
          ServersMaxSize=5,
          ServersDesiredCpacity=3,
          S3PatchToBucket=s3://s3-hawebapp-cris-test,
          KeyPairBastion=BastionKey,
          KeyPairPrivate=BastionKey,
          DNSProtocol=http://,
          NetworkAccessIP=0.0.0.0/0
